# .github/workflows/deploy-fabric-api.yml

name: Deploy Fabric API on GCP VM and Start Docker Container

on:
  workflow_run:
    workflows: ["Build and Push Docker Image"]
    types:
      - completed
  workflow_dispatch:

jobs:
  deploy:
    name: Deploy Docker Container to GCP VM
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the Repository
      - name: Checkout Repository
        uses: actions/checkout@v4

      # Step 2: Authenticate to Google Cloud
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}
          project_id: ${{ secrets.GCP_PROJECT_ID }}

      # Step 3: Set Up gcloud SDK
      - name: Set up gcloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          install_components: "compute"

      # Step 4: Deploy to GCP VM via SSH and Execute Docker Commands
      - name: Deploy to GCP VM
        run: |
          # Create the deployment directory if not existing
          sudo mkdir -p /home/ilan_melki/fabric-api

          # Navigate to the deployment directory
          cd /home/ilan_melki/fabric-api || exit

          # Pull the latest Docker image
          docker pull ${{ secrets.DOCKER_USERNAME }}/fabric-api:latest

          # Stop and remove existing container if it exists
          if [ \$(docker ps -q -f name=${{ secrets.GCP_PROJECT_ID }}) ]; then
            docker stop ${{ secrets.GCP_PROJECT_ID }}
            docker rm ${{ secrets.GCP_PROJECT_ID }}
          fi

          # Run the new container with environment variables
          docker run -d \
            --name ${{ secrets.GCP_PROJECT_ID }} \
            -p 8080:8080 \
            -e GIN_MODE=release \
            -e OPENAI_API_KEY='${{ secrets.OPENAI_API_KEY }}' \
            -e DEFAULT_VENDOR='${{ secrets.DEFAULT_VENDOR }}' \
            -e YOUTUBE_API_KEY='${{ secrets.YOUTUBE_API_KEY }}' \
            ${{ secrets.DOCKER_USERNAME }}/fabric-api:latest
    # Optional: Define any environment variables needed for the GitHub Actions runner here
    # env:
